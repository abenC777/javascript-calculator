{"version":3,"sources":["components/Calculator.js","components/Buttons.js","components/Output.js","components/Formula.js","components/App.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNegativeSign","Calculator","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","length","match","className","currentValue","decimal","evaluate","numbers","operators","Component","Buttons","id","onClick","React","Output","Formula","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f5f6cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Calculator.css\";\r\nimport Buttons from \"./Buttons\";\r\nimport Output from \"./Output\";\r\nimport Formula from \"./Formula\";\r\n\r\nconst isOperator = /[x/+‑]/,\r\n  endsWithOperator = /[x+‑/]$/,\r\n  endsWithNegativeSign = /\\d[x/+‑]{1}‑$/;\r\n\r\nexport default class Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n    };\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n  }\r\n\r\n  maxDigitWarning() {\r\n    this.setState({\r\n      currentVal: \"Digit Limit Met\",\r\n      prevVal: this.state.currentVal,\r\n    });\r\n    setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\r\n  }\r\n\r\n  handleEvaluate() {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      let expression = this.state.formula;\r\n      while (endsWithOperator.test(expression)) {\r\n        expression = expression.slice(0, -1);\r\n      }\r\n      expression = expression\r\n        .replace(/x/g, \"*\")\r\n        .replace(/‑/g, \"-\")\r\n        .replace(\"--\", \"+0+0+0+0+0+0+\");\r\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n      this.setState({\r\n        currentVal: answer.toString(),\r\n        formula:\r\n          expression\r\n            .replace(/\\*/g, \"⋅\")\r\n            .replace(/-/g, \"‑\")\r\n            .replace(\"+0+0+0+0+0+0+\", \"‑-\")\r\n            .replace(/(x|\\/|\\+)‑/, \"$1-\")\r\n            .replace(/^‑/, \"-\") +\r\n          \"=\" +\r\n          answer,\r\n        prevVal: answer,\r\n        evaluated: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperators(e) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const value = e.target.value;\r\n      const { formula, prevVal, evaluated } = this.state;\r\n      this.setState({ currentVal: value, evaluated: false });\r\n      if (evaluated) {\r\n        this.setState({ formula: prevVal + value });\r\n      } else if (!endsWithOperator.test(formula)) {\r\n        this.setState({\r\n          prevVal: formula,\r\n          formula: formula + value,\r\n        });\r\n      } else if (!endsWithNegativeSign.test(formula)) {\r\n        this.setState({\r\n          formula:\r\n            (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\r\n            value,\r\n        });\r\n      } else if (value !== \"‑\") {\r\n        this.setState({\r\n          formula: prevVal + value,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNumbers(e) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const { currentVal, formula, evaluated } = this.state;\r\n      const value = e.target.value;\r\n      this.setState({ evaluated: false });\r\n      if (currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (evaluated) {\r\n        this.setState({\r\n          currentVal: value,\r\n          formula: value !== \"0\" ? value : \"\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal:\r\n            currentVal === \"0\" || isOperator.test(currentVal)\r\n              ? value\r\n              : currentVal + value,\r\n          formula:\r\n            currentVal === \"0\" && value === \"0\"\r\n              ? formula === \"\"\r\n                ? value\r\n                : formula\r\n              : /([^.0-9]0|^0)$/.test(formula)\r\n              ? formula.slice(0, -1) + value\r\n              : formula + value,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.evaluated === true) {\r\n      this.setState({\r\n        currentVal: \"0.\",\r\n        formula: \"0.\",\r\n        evaluated: false,\r\n      });\r\n    } else if (\r\n      !this.state.currentVal.includes(\".\") &&\r\n      !this.state.currentVal.includes(\"Limit\")\r\n    ) {\r\n      this.setState({ evaluated: false });\r\n      if (this.state.currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (\r\n        endsWithOperator.test(this.state.formula) ||\r\n        (this.state.currentVal === \"0\" && this.state.formula === \"\")\r\n      ) {\r\n        this.setState({\r\n          currentVal: \"0.\",\r\n          formula: this.state.formula + \"0.\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + \".\",\r\n          formula: this.state.formula + \".\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    this.setState({\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n      evaluated: false,\r\n    });\r\n  }\r\n\r\n  // render() {\r\n  //   return (\r\n  //     <div id=\"calculator\" className=\"calculator\">\r\n  //       <div className=\"display\">\r\n  //         <div className=\"display-1\">\r\n  //           {this.state.formula.replace(/x/g, \"⋅\")}\r\n  //         </div>\r\n  //         <div id=\"display\" className=\"display-2\">\r\n  //           {this.state.currentVal}\r\n  //         </div>\r\n  //       </div>\r\n  //       <button\r\n  //         value=\"AC\"\r\n  //         id=\"clear\"\r\n  //         className=\"clear\"\r\n  //         onClick={this.initialize}\r\n  //       >\r\n  //         AC\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"/\"\r\n  //         id=\"divide\"\r\n  //         className=\"divide\"\r\n  //         onClick={this.handleOperators}\r\n  //       >\r\n  //         /\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"x\"\r\n  //         id=\"multiply\"\r\n  //         className=\"multiply\"\r\n  //         onClick={this.handleOperators}\r\n  //       >\r\n  //         x\r\n  //       </button>\r\n  //       <button\r\n  //         id=\"subtract\"\r\n  //         onClick={this.handleOperators}\r\n  //         className=\"subtract\"\r\n  //         value=\"-\"\r\n  //       >\r\n  //         -\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"+\"\r\n  //         id=\"add\"\r\n  //         className=\"add\"\r\n  //         onClick={this.handleOperators}\r\n  //       >\r\n  //         +\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"=\"\r\n  //         id=\"equals\"\r\n  //         className=\"equals\"\r\n  //         onClick={this.handleEvaluate}\r\n  //       >\r\n  //         =\r\n  //       </button>\r\n  //       <button\r\n  //         value=\".\"\r\n  //         id=\"decimal\"\r\n  //         className=\"decimal\"\r\n  //         onClick={this.handleDecimal}\r\n  //       >\r\n  //         .\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"0\"\r\n  //         id=\"zero\"\r\n  //         className=\"zero\"\r\n  //         onClick={this.handleNumbers}\r\n  //       >\r\n  //         0\r\n  //       </button>\r\n  //       <button value=\"1\" id=\"one\" className=\"one\" onClick={this.handleNumbers}>\r\n  //         1\r\n  //       </button>\r\n  //       <button value=\"2\" id=\"two\" className=\"two\" onClick={this.handleNumbers}>\r\n  //         2\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"3\"\r\n  //         id=\"three\"\r\n  //         className=\"three\"\r\n  //         onClick={this.handleNumbers}\r\n  //       >\r\n  //         3\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"4\"\r\n  //         id=\"four\"\r\n  //         className=\"four\"\r\n  //         onClick={this.handleNumbers}\r\n  //       >\r\n  //         4\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"5\"\r\n  //         id=\"five\"\r\n  //         className=\"five\"\r\n  //         onClick={this.handleNumbers}\r\n  //       >\r\n  //         5\r\n  //       </button>\r\n  //       <button value=\"6\" id=\"six\" className=\"six\" onClick={this.handleNumbers}>\r\n  //         6\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"7\"\r\n  //         id=\"seven\"\r\n  //         className=\"seven\"\r\n  //         onClick={this.handleNumbers}\r\n  //       >\r\n  //         7\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"8\"\r\n  //         id=\"eight\"\r\n  //         className=\"eight\"\r\n  //         onClick={this.handleNumbers}\r\n  //       >\r\n  //         8\r\n  //       </button>\r\n  //       <button\r\n  //         value=\"9\"\r\n  //         id=\"nine\"\r\n  //         className=\"nine\"\r\n  //         onClick={this.handleNumbers}\r\n  //       >\r\n  //         9\r\n  //       </button>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"calculator\">\r\n          <div className=\"screen\">\r\n            <Formula formula={this.state.formula.replace(/x/g, \"⋅\")} />\r\n            <Output currentValue={this.state.currentVal} />\r\n          </div>\r\n          <Buttons\r\n            decimal={this.handleDecimal}\r\n            evaluate={this.handleEvaluate}\r\n            initialize={this.initialize}\r\n            numbers={this.handleNumbers}\r\n            operators={this.handleOperators}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"clear\"\r\n          id=\"clear\"\r\n          onClick={this.props.initialize}\r\n          value=\"AC\"\r\n        >\r\n          AC\r\n        </button>\r\n        <button\r\n          id=\"divide\"\r\n          className=\"divide\"\r\n          onClick={this.props.operators}\r\n          value=\"/\"\r\n        >\r\n          /\r\n        </button>\r\n        <button\r\n          id=\"multiply\"\r\n          className=\"multiply\"\r\n          onClick={this.props.operators}\r\n          value=\"x\"\r\n        >\r\n          x\r\n        </button>\r\n        <button\r\n          id=\"seven\"\r\n          className=\"seven\"\r\n          onClick={this.props.numbers}\r\n          value=\"7\"\r\n        >\r\n          7\r\n        </button>\r\n        <button\r\n          id=\"eight\"\r\n          className=\"eight\"\r\n          onClick={this.props.numbers}\r\n          value=\"8\"\r\n        >\r\n          8\r\n        </button>\r\n        <button\r\n          id=\"nine\"\r\n          className=\"nine\"\r\n          onClick={this.props.numbers}\r\n          value=\"9\"\r\n        >\r\n          9\r\n        </button>\r\n        <button\r\n          id=\"subtract\"\r\n          className=\"subtract\"\r\n          onClick={this.props.operators}\r\n          value=\"‑\"\r\n        >\r\n          ‑\r\n        </button>\r\n        <button\r\n          id=\"four\"\r\n          className=\"four\"\r\n          onClick={this.props.numbers}\r\n          value=\"4\"\r\n        >\r\n          4\r\n        </button>\r\n        <button\r\n          id=\"five\"\r\n          className=\"five\"\r\n          onClick={this.props.numbers}\r\n          value=\"5\"\r\n        >\r\n          5\r\n        </button>\r\n        <button id=\"six\" className=\"six\" onClick={this.props.numbers} value=\"6\">\r\n          6\r\n        </button>\r\n        <button\r\n          id=\"add\"\r\n          className=\"add\"\r\n          onClick={this.props.operators}\r\n          value=\"+\"\r\n        >\r\n          +\r\n        </button>\r\n        <button id=\"one\" className=\"one\" onClick={this.props.numbers} value=\"1\">\r\n          1\r\n        </button>\r\n        <button id=\"two\" className=\"two\" onClick={this.props.numbers} value=\"2\">\r\n          2\r\n        </button>\r\n        <button\r\n          id=\"three\"\r\n          className=\"three\"\r\n          onClick={this.props.numbers}\r\n          value=\"3\"\r\n        >\r\n          3\r\n        </button>\r\n        <button\r\n          className=\"zero\"\r\n          id=\"zero\"\r\n          onClick={this.props.numbers}\r\n          value=\"0\"\r\n        >\r\n          0\r\n        </button>\r\n        <button\r\n          id=\"decimal\"\r\n          className=\"decimal\"\r\n          onClick={this.props.decimal}\r\n          value=\".\"\r\n        >\r\n          .\r\n        </button>\r\n        <button\r\n          id=\"equals\"\r\n          className=\"equals\"\r\n          onClick={this.props.evaluate}\r\n          value=\"=\"\r\n        >\r\n          =\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nclass Output extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"display-2\" id=\"display\">\r\n        {this.props.currentValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Output;\r\n","import React from \"react\";\r\n\r\nclass Formula extends React.Component {\r\n  render() {\r\n    return <div className=\"display-1\">{this.props.formula}</div>;\r\n  }\r\n}\r\n\r\nexport default Formula;\r\n","import \"./App.css\";\r\nimport Calculator from \"./Calculator\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Calculator />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}